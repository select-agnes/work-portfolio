"""This is the main module that operates the program.

Perform the following actions:

Access and login to the site to crawl.
It crawls the pass/fail value corresponding to each protocol.
Save pass/fail values in Excel.
Draw a graph for the total pass/fail.
Send the result table by e-mail, including Excel and Graph.
"""
import os
import time
import datetime
import traceback
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
import chromedriver_binary
import save_data
import draw_graph
import send_mail
import send_error_mail
import log_main
import info_admin
For a Chrome browser bug called '시스템에 부착된 장치가 작동하지 않습니다'
options = webdriver.ChromeOptions()
options.add_experimental_option('excludeSwitches', ['enable-logging'])
options.add_argument("--ignore-certificate-errors")

Date Info
today = datetime.date.today()
yesterday = today - datetime.timedelta(days=1)

Login Info
result = info_admin.get_info_admin()
USR = result[0]
PWD = result[1]

Default Configuration
DEFAULT_PATH = "C:/Users/xxxxxxxx/OneDrive - HMGNA/Documents/Python_project/crawling/NorthAmerica/"
hma_prod_url = 'https://10.112.224.29:xxxx/'
kus_prod_url = 'https://10.112.224.42:xxxx/'
hacc_prod_url = 'https://10.112.224.74:xxxx/'
kci_prod_url = 'https://10.112.224.84:xxxx/'

def get_pass_fail(*protocol):
"""Returns the yesterday 00:00 ~ 24:00 success/failure value corresponding to the protocol.

Args:
    *protocol (string): Protocol(s) to crawl success/fail values

Returns:
    string: Returns a crawled string containing pass/fail from url

Example:
    >>> r = get_pass_fail('RUT-A', 'GRP-F')
    >>> print(r)
    'Proceeding: 0 Success: 30,683,969 TimeOut: 0 Failed: 51,356'
"""
url = hma_prod_url + 'ccs/transactions?startTime=' + str(yesterday) + '%2000%3A00%3A00.000&endTime=' + str(today) + '%2000%3A00%3A00.000&vin=&nadid=&tid=&tranCode=&statusCode='
for i in protocol:
url += ('&scenario=' + str(i))
url += '&version=&hostName=&clientId='
driver.get(url)
time.sleep(30)
return driver.find_element("xpath", '//*[@id="app"]/div/main/div/div[2]/div[5]/div/div[1]/div/div[1]/span[2]').text

Crawling start
try :
# Access to LMS page
driver = webdriver.Chrome()
time.sleep(30)
driver.get(hma_prod_url)
time.sleep(30)

# go off the '안전하지 않음' page
driver.find_element_by_xpath('//*[@id="details-button"]').click()
driver.find_element("xpath", '//*[@id="details-button"]').click()
time.sleep(10)
driver.find_element_by_xpath('//*[@id="proceed-link"]').click()
driver.find_element("xpath", '//*[@id="proceed-link"]').click()
time.sleep(10)

# Error handling if not LMS page now
assert "LMS" in driver.title

# Login
elem = driver.find_element("xpath", '//*[@id="input-34"]')
elem.send_keys(USR)
time.sleep(10)
elam = driver.find_element("xpath", '//*[@id="input-35"]')
elam.send_keys(PWD)
time.sleep(10)
elem.send_keys(Keys.RETURN)
time.sleep(20)

total = get_pass_fail('RUT-A', 'GRP-F', 'GRP-P', 'GRP-E', 'GRP-U', 'GRP-I')
rutA = get_pass_fail('RUT-A')
grpF = get_pass_fail('GRP-F')
grpP = get_pass_fail('GRP-P')
grpE = get_pass_fail('GRP-E')
grpU = get_pass_fail('GRP-U')
grpI = get_pass_fail('GRP-I')

Protocols = ['TOTAL', 'RUT-A', 'GRP-F', 'GRP-P', 'GRP-E', 'GRP-U', 'GRP-I']
PassFails = [total, rutA, grpF, grpP, grpE, grpU, grpI]

# 이미 엑셀에 동일 날짜가 존재하면 엑셀에 다시 입력시키기 X. 그림 다시 그려 저장하기 X.
save_data.save_xlsx('TOTAL', total, yesterday)
draw_graph.draw('TOTAL', yesterday)
save_data.save_xlsx('RUT-A', rutA, yesterday)
save_data.save_xlsx('GRP-F', grpF, yesterday)
save_data.save_xlsx('GRP-P', grpP, yesterday)
save_data.save_xlsx('GRP-E', grpE, yesterday)
save_data.save_xlsx('GRP-U', grpU, yesterday)
save_data.save_xlsx('GRP-I', grpI, yesterday)

# 이메일로 결과값 (target) 전송
send_mail.send(Protocols, PassFails, yesterday)
except Exception:
ERR = traceback.format_exc()
log_main.error_log(str(ERR))

SCREENSHOT_PATH = DEFAULT_PATH + "screenshot/"
if os.path.isdir(SCREENSHOT_PATH) is False :
    os.makedirs(SCREENSHOT_PATH, exist_ok=True)

HUMAN_CLOSED = False
try :
    driver.save_screenshot(SCREENSHOT_PATH + str(yesterday) + ".png")
except Exception:
    HUMAN_CLOSED = True

send_error_mail.send(str(ERR), HUMAN_CLOSED, yesterday)
time.sleep(5)
driver.quit()
